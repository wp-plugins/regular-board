<?php 

/**
 * Post actions
 *
 * (1) Handle actions generated by post buttons
 * (1) such as delete, spam, and report.
 *
 * @package regular_board
 */
 
if ( !defined ( 'regular_board_plugin' ) ) {
	die();
}


/**
 * Post deletion
 * Compares the hashed profile password of current user to the password for the post
 * moderators and janitors are allowed to bypass this check
 */
 
if ( $this_area == 'delete' ) {
	echo '<div id="post_action">';
	$comparedpass = $profilepassword;
	$comparepassword = $wpdb->get_var( "SELECT post_password FROM $regular_board_posts WHERE post_id = $this_thread" );
	if ( $comparepassword == $comparedpass || $is_moderator || $is_user_mod || $is_user_janitor ) {
		
		$wpdb->update (
			$regular_board_posts,
			array( 
				'post_public' => 3
			),
			array( 
				'post_id' => $this_thread
			),
			array( 
				'%s'
			)
		);
		echo '<p>Post set for deletion.</p>';
		
	} else {
		echo '<p>You can\'t do that.</p>';
	}
	echo '</div>';
}

/**
 * Post (permanent) deletion
 * Compares the hashed profile password of current user to the password for the post
 * moderators and janitors are allowed to bypass this check
 */
 
if ( $this_area == 'destroy' ) {
	echo '<div id="post_action">';
	$comparedpass = $profilepassword;
	$comparepassword = $wpdb->get_var( "SELECT post_password FROM $regular_board_posts WHERE post_id = $this_thread" );
	if ( $comparepassword == $comparedpass || $is_moderator || $is_user_mod || $is_user_janitor ) {
		
		$wpdb->delete ( $regular_board_posts, array ( 'post_id' => $this_thread ), array ( '%s' ) );
		$wpdb->delete ( $regular_board_posts, array ( 'post_parent' => $this_thread ), array ( '%s' ) );
		echo '<p>Post deleted.</p>';
		
	} else {
		echo '<p>You can\'t do that.</p>';
	}
	echo '</div>';
}

/**
 * Post undeletion
 * Compares the hashed profile password of current user to the password for the post
 * moderators and janitors are allowed to bypass this check
 */
 
if ( $this_area == 'undelete' ) {
	echo '<div id="post_action">';
	$comparedpass = $profilepassword;
	$comparepassword = $wpdb->get_var( "SELECT post_password FROM $regular_board_posts WHERE post_id = $this_thread" );
	if ( $comparepassword == $comparedpass || $is_moderator || $is_user_mod || $is_user_janitor ) {
		
		$wpdb->update (
			$regular_board_posts,
			array( 
				'post_public' => 1
			),
			array( 
				'post_id' => $this_thread
			),
			array( 
				'%s'
			)
		);
		echo '<p>Post restored.</p>';
		
	} else {
		echo '<p>You can\'t do that.</p>';
	}
	echo '</div>';
}


/**
 * Post move
 * If there is more than one board, this option is "activated" to allow moderators and usermods to move 
 * posts to other boards.
 */
 
elseif ( $this_area == 'move' ) {
	echo '<div id="post_action">';
	if ( $is_moderator || $is_user_mod ) {
		
		if ( !isset ( $_POST['confirm'] ) ) {
			if ( count ( $getboards ) > 1 ) {
				echo '<form method="post" name="form" action="' . $current_page . '?a=move&t=' . $this_thread . '">';
				wp_nonce_field('form');
				echo '<select name="move_to" id="move_to">';
				foreach($getboards as $gotBoard){
					if ( $gotBoard->board_shortname ) {
						$board = esc_sql($gotBoard->board_shortname);
						$name  = esc_sql($gotBoard->board_name);
						echo '<option value="'.$board.'">/'.$board.'/ - '.$name.'</option>';
					}
				}
				echo '</select><input type="submit" name="confirm" value="Move" /></form>';
				
			}
		}
		if ( isset ( $_POST['confirm'] ) ) {
			$wpdb->update (
				$regular_board_posts,
				array( 
					'post_board' => $_REQUEST['move_to']
				),
				array( 
					'post_id' => $this_thread
				),
				array( 
					'%s'
				)
			);
			$wpdb->update (
				$regular_board_posts,
				array( 
					'post_board' => $_REQUEST['move_to']
				),
				array( 
					'post_parent' => $this_thread
				),
				array( 
					'%s'
				)
			);
			echo '<p>Post moved.</p>';
		}
		
	} else {
		echo '<p>You can\'t access that.</p>';
	}
	echo '</div>';
}

/**
 * Post spam
 * Mark this post as spam.
 */
 
elseif ( $this_area == 'spam' ) {
	echo '<div id="post_action">';
	if ( $is_moderator || $is_user_mod ) {
		$wpdb->update (
			$regular_board_posts,
			array( 
				'post_public' => 2
			),
			array( 
				'post_id' => $this_thread
			),
			array( 
				'%d'
			)
		);
		echo '<p>Post marked as spam.</p>';
	} else {
		echo '<p>You can\'t access that.</p>';
	}
	echo '</div>';
}

/**
 * Post (un)spam
 * (un)spam this post.
 */
 
elseif ( $this_area == 'unspam' ) {
	echo '<div id="post_action">';
	if ( $is_moderator || $is_user_mod ) {
		$wpdb->update (
			$regular_board_posts,
			array( 
				'post_public' => 1
			),
			array( 
				'post_id' => $this_thread
			),
			array( 
				'%d'
			)
		);
		echo '<p>Post no longer marked as spam.</p>';
	} else {
		echo '<p>You can\'t access that.</p>';
	}
	echo '</div>';
}

/**
 * Post lock
 * Lock this post
 */
 
elseif ( $this_area == 'lock' ) {
	echo '<div id="post_action">';
	if ( $is_moderator || $is_user_mod ) {
			$wpdb->update (
				$regular_board_posts,
				array( 
					'post_locked' => 1
				),
				array( 
					'post_id' => $this_thread
				),
				array( 
					'%d'
				)
			);
			echo '<p>Post locked.</p>';

	} else {
		echo '<p>You can\'t access that.</p>';
	}
	echo '</div>';
}

/**
 * Post unlock
 * Unlock this post
 */
 
elseif ( $this_area == 'unlock' ) {
	echo '<div id="post_action">';
	if ( $is_moderator || $is_user_mod ) {
		
			$wpdb->update (
				$regular_board_posts,
				array( 
					'post_locked' => 0
				),
				array( 
					'post_id' => $this_thread
				),
				array( 
					'%d'
				)
			);
			echo '<p>Post unlocked.</p>';

	} else {
		echo '<p>You can\'t access that.</p>';
	}
	echo '</div>';
}

/**
 * Post sticky
 * Make this post sticky
 */
 
elseif ( $this_area == 'sticky' ) {
	echo '<div id="post_action">';
	if ( $is_moderator || $is_user_mod ) {
		
			$wpdb->update (
				$regular_board_posts,
				array( 
					'post_sticky' => 1
				),
				array( 
					'post_id' => $this_thread
				),
				array( 
					'%d'
				)
			);
			echo '<p>Post stickied.</p>';

	} else {
		echo '<p>You can\'t access that.</p>';
	}
	echo '</div>';
}

/**
 * Post unsticky
 * Unstick this post
 */
 
elseif ( $this_area == 'unsticky' ) {
	echo '<div id="post_action">';
	if ( $is_moderator || $is_user_mod ) {
		
			$wpdb->update (
				$regular_board_posts,
				array( 
					'post_sticky' => 0
				),
				array( 
					'post_id' => $this_thread
				),
				array( 
					'%d'
				)
			);
			echo '<p>Post unstickied.</p>';

	} else {
		echo '<p>You can\'t access that.</p>';
	}
	echo '</div>';
}

/**
 * Post reporting
 * Checks if a report already exists in the database before submission to ignore duplicates
 */
 
elseif ( $this_area == 'report' ) {
	echo '<div id="post_action">
	<form name="delete" name="form" method="post" action="' . $current_page . '?a=report&t=' . $this_thread . '" >';
		wp_nonce_field('form');
	echo '<input type="text" name="reason" placeholder="Reason for reporting..." />
	<input type="submit" name="report" value="Report thread" />
	</form>';
	if ( isset ( $_POST['report'] ) && $_REQUEST['reason'] ) {
		$REPORTMESSAGE = esc_sql( $_REQUEST['reason'] );
		$reportthread = $wpdb->get_results ( $wpdb->prepare ( "SELECT * FROM $regular_board_posts WHERE post_id = %d", $this_thread ) );
		foreach ( $reportthread as $reported ) {
			$grabexistingreport = $wpdb->get_results ( $wpdb->prepare ( "SELECT * FROM $regular_board_posts WHERE post_id = %d", $this_thread ) );
			if ( count ( $grabexistingreport ) > 0 ) {
				foreach ( $grabexistingreport as $existing ) {
					$wpdb->update (
						$regular_board_posts,
						array( 
							'post_report' => $REPORTMESSAGE,
							'post_reportcount' => $existing->post_reportcount + 1
						),
						array( 
							'post_id' => $this_thread
						),
						array( 
							'%s',
							'%d'
						)
					);
					echo '<p>Post reported.</p>';
				}
			}
		}
	}
	echo '</div>';
}

/**
 * Post report dimissing
 * Dismisses a report (completely).
 */
 
elseif ( $this_area == 'dismiss' ) {
	if ( $is_moderator || $is_user_mod ) {
		echo '<div id="post_action">';
		$grabexistingreport = $wpdb->get_results ( $wpdb->prepare ( "SELECT * FROM $regular_board_posts WHERE post_id = %d", $this_thread ) );
		if ( count ( $grabexistingreport ) > 0 ) {
			foreach ( $grabexistingreport as $existing ) {
				$wpdb->update (
					$regular_board_posts,
					array( 
						'post_report' => '',
						'post_reportcount' => 0
					),
					array( 
						'post_id' => $this_thread
					),
					array( 
						'%s',
						'%d'
					)
				);
				echo '<p>Report dimissed.</p>';
			}
		}
	}
	echo '</div>';
}